<?php
/**
 * Generated by Haxe 4.1.4
 */

namespace which\_FinderTools;

use \php\_Boot\HxAnon;
use \tink\core\_Future\SyncFuture;
use \php\Boot;
use \tink\core\TypedError;
use \tink\streams\StreamObject;
use \tink\core\Outcome;
use \tink\streams\Handled;
use \tink\core\_Lazy\LazyConst;
use \tink\streams\_Stream\Handler_Impl_;
use \tink\core\_Future\Future_Impl_;
use \tink\core\FutureObject;

final class WhichResult_Impl_ {
	/**
	 * TODO
	 * 
	 * @param StreamObject $this
	 * 
	 * @return FutureObject
	 */
	public static function all ($this1) {
		$executables = new \Array_hx();
		return Future_Impl_::next($this1->forEach(Handler_Impl_::ofSafe(function ($executable) use (&$executables) {
			if ($executables->indexOf($executable) === -1) {
				$executables->arr[$executables->length++] = $executable;
			}
			return new SyncFuture(new LazyConst(Handled::Resume()));
		})), function ($_) use (&$executables) {
			if ($executables->length > 0) {
				return new SyncFuture(new LazyConst(Outcome::Success($executables)));
			} else {
				return new SyncFuture(new LazyConst(Outcome::Failure(new TypedError(404, "Command not found.", new HxAnon([
					"fileName" => "src/which/FinderTools.hx",
					"lineNumber" => 30,
					"className" => "which._FinderTools.WhichResult_Impl_",
					"methodName" => "all",
				])))));
			}
		});
	}

	/**
	 * TODO
	 * 
	 * @param StreamObject $this
	 * 
	 * @return FutureObject
	 */
	public static function first ($this1) {
		$executable = null;
		return Future_Impl_::next($this1->forEach(Handler_Impl_::ofSafe(function ($exec) use (&$executable) {
			$executable = $exec;
			return new SyncFuture(new LazyConst(Handled::Finish()));
		})), function ($_) use (&$executable) {
			if ($executable !== null) {
				return new SyncFuture(new LazyConst(Outcome::Success($executable)));
			} else {
				return new SyncFuture(new LazyConst(Outcome::Failure(new TypedError(404, "Command not found.", new HxAnon([
					"fileName" => "src/which/FinderTools.hx",
					"lineNumber" => 40,
					"className" => "which._FinderTools.WhichResult_Impl_",
					"methodName" => "first",
				])))));
			}
		});
	}
}

Boot::registerClass(WhichResult_Impl_::class, 'which._FinderTools.WhichResult_Impl_');
