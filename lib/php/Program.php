<?php
/**
 * Generated by Haxe 4.1.1
 */

use \tink\Cli;
use \php\Boot;
use \tink\cli\prompt\RetryPrompt;
use \tink\cli\Doc0;
use \tink\cli\doc\DefaultFormatter;
use \tink\cli\Router0;

/**
 * Find the instances of an executable in the system path.
 */
class Program {
	/**
	 * @var bool
	 * List all instances of executables found (instead of just the first one).
	 */
	public $all;
	/**
	 * @var bool
	 * Output usage information.
	 */
	public $help;
	/**
	 * @var bool
	 * Silence the output, just return the exit code (0 if any executable is found, otherwise 1).
	 */
	public $silent;
	/**
	 * @var bool
	 * Output the version number.
	 */
	public $version;

	/**
	 * Application entry point.
	 * 
	 * @return void
	 */
	public static function main () {
		$this1 = new Program();
		(new Router0($this1, new RetryPrompt(5)))->process(\Sys::args())->handle(Boot::getStaticClosure(Cli::class, 'exit'));
	}

	/**
	 * Creates a new program.
	 * 
	 * @return void
	 */
	public function __construct () {
		$this->version = false;
		$this->silent = false;
		$this->help = false;
		$this->all = false;
	}

	/**
	 * Executes this program.
	 * 
	 * @param \Array_hx $rest
	 * 
	 * @return void
	 */
	public function run ($rest) {
		if ($this->help) {
			echo((\Std::string((new DefaultFormatter())->format(Doc0::get()))??'null') . PHP_EOL);
			return;
		}
		if ($this->version) {
			echo("1.0.0" . PHP_EOL);
			return;
		}
		echo("Program path:" . PHP_EOL);
		echo((\Std::string(\Sys::programPath())??'null') . PHP_EOL);
	}
}

Boot::registerClass(Program::class, 'Program');
